version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: f1_postgres
    restart: always
    environment:
      - POSTGRES_USER=f1user
      - POSTGRES_PASSWORD=f1password
      - POSTGRES_DB=f1db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U f1user -d f1db"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: f1_pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  f1api:
    build:
      context: .
      dockerfile: F1Api/Dockerfile
    container_name: f1_api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=f1db;Username=f1user;Password=f1password
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/swagger"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data: 